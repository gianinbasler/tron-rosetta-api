
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
        maven { url "https://repo1.maven.org/maven2" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/releases/"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        // Updated version can be passed via command line arg as -PopenApiGeneratorVersion=VERSION
        classpath "org.openapitools:openapi-generator-gradle-plugin:4.3.1"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
    }
}

plugins {
    id 'java'
    id 'application'
    id("java-library")
    id("org.openapi.generator").version("4.3.1")
    id 'org.springframework.boot' version '2.0.1.RELEASE'
//    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
}
apply plugin: "java"
apply plugin: "jacoco"
apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "org.springframework.boot"

//apply plugin: 'io.spring.dependency-management'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

version '1.0.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/plugins-release' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    compile "org.slf4j:jcl-over-slf4j:1.7.25"
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    compile group: 'com.google.guava', name: 'guava', version: '24.1-jre'
    compile "com.google.code.findbugs:jsr305:3.0.0"
    compile "org.apache.commons:commons-lang3:3.4"
    compile group: 'org.apache.commons', name: 'commons-math', version: '2.2'
    compile "org.apache.commons:commons-collections4:4.0"
    compile group: 'joda-time', name: 'joda-time', version: '2.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.5'
    compile group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.1.0'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.11'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-tomcat:2.0.1.RELEASE'
    compile 'org.apache.tomcat.embed:tomcat-embed-core:8.5.29'
    compile 'org.apache.tomcat.embed:tomcat-embed-el:8.5.29'
    compile 'org.apache.tomcat.embed:tomcat-embed-websocket:8.5.29'
    compile 'org.springframework:spring-core:5.0.5.RELEASE'
    compile 'org.springframework:spring-web:5.0.5.RELEASE'
    compile 'org.springframework:spring-aop:5.0.5.RELEASE'
    compile 'org.springframework:spring-beans:5.0.5.RELEASE'
    compile 'org.springframework:spring-webmvc:5.0.5.RELEASE'
    compile 'org.springframework:spring-context:5.0.5.RELEASE'
    compile 'org.springframework:spring-expression:5.0.5.RELEASE'
    compile 'org.springframework:spring-jcl:5.0.5.RELEASE'
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile 'javax.servlet:servlet-api:2.5'
    compile 'com.github.tronprotocol:java-tron:develop-SNAPSHOT'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}


tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

ext {
    spec = "$rootDir/specs/api.json".toString()
    generatedSourcesDir = "$buildDir/generated/rosetta".toString()
}

mainClassName = 'org.tron.invoker.OpenAPI2SpringBoot'

openApiGenerate {
    generatorName = "spring"

    inputSpec = spec
    outputDir = generatedSourcesDir

    apiPackage = "org.tron.api"
    invokerPackage = "org.tron.invoker"
    modelPackage = "org.tron.model"
    configOptions = [
            dateLibrary: "java8",
            configPackage: "org.tron.config",
            hideGenerationTimestamp: "true",
            java8: "true",
            interfaceOnly: "true",
            library: "spring-boot",
            returnSuccessCode: "true",
            serializableModel: "true",
            //skipDefaultInterface: "true",

    ]

    //groupId = "tronprotocol"
    //id = "tron-rosetta-api"
    //version = "1.0.0"
}

sourceSets {
    getByName("main") {
        java {
            srcDir("$generatedSourcesDir/src/main/java")
        }
    }
}

compileJava.dependsOn tasks.openApiGenerate
//build.dependsOn openApiGenerate

build.doLast {
    copy {

        from file("${rootDir}/build/libs/")
        into("${rootDir}/build/lib/")
        include '**/*.jar'
        include '*.jar'
    }
}
